"""Open permalinks generated by `hugo list all > my_file.csv`"""

import csv
import logging
import urllib.error
import urllib.parse
import urllib.request
from multiprocessing import Pool
from pathlib import Path

import fire


def main(path: Path, localhost: bool = False, port: int = 1313):
    # load csv
    with open(path, "r", encoding="utf-8") as f:
        reader = csv.DictReader(f)
        links = [row["permalink"] for row in reader]
    logging.info(f"Found {len(links)} links")

    # modify links if needed
    if localhost:
        logging.info("Converting links to localhost")
        links = [convert_url_to_localhost(url=link, port=port) for link in links]

    # check links
    logging.info("Checking links...")
    with Pool() as pool:
        pool.map(check_link, links)
    logging.info("Checking complete")


def convert_url_to_localhost(url: str, port: int):
    netloc = f"localhost:{port}"
    url = urllib.parse.urlparse(url)._replace(netloc=netloc, scheme="http").geturl()
    return url


def check_link(link: str):
    try:
        urllib.request.urlopen(link)
    except urllib.error.HTTPError:
        logging.error(f"Bad URL: {link}")


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    fire.Fire(main)
